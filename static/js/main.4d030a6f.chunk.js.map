{"version":3,"sources":["components/Add.js","components/Article.js","components/News.js","App.js","serviceWorker.js","index.js"],"names":["Add","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","validate","_this$state","state","author","text","secText","agree","trim","length","onButton","e","preventDefault","_this$state2","onHandlerNews","id","Date","onHandlerChange","_e$currentTarget","currentTarget","value","setState","defineProperty","handleCheckbox","checked","_this$state3","react_default","a","createElement","className","type","placeholder","onChange","onClick","disabled","React","Component","Article","visible","onClickSecText","_this$props$data","data","href","News","renderNews","map","item","Article_Article","key","App","news","isLoading","onAddNews","lastNews","concat","toConsumableArray","_this2","fetch","then","response","json","setTimeout","Fragment","Add_Add","Array","isArray","News_News","nextFilteredNews","console","log","forEach","index","toLowerCase","indexOf","filteredNews","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4d030a6f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Add extends React.Component{\r\n            constructor(props){\r\n                super(props);\r\n                this.state = {\r\n                    author: '',\r\n                    text: '',\r\n                    secText: '',\r\n                    agree: false\r\n                }\r\n            }\r\n            validate = () => {\r\n                const {author, text, secText, agree} = this.state\r\n                if(author.trim() && author.length > 3 \r\n                   && \r\n                   text.trim() && text.length > 6 \r\n                   &&\r\n                   secText.trim() && secText.length > 6 \r\n                   &&\r\n                   agree){\r\n                    return true;\r\n                }\r\n                return false;\r\n            }\r\n            onButton = (e) => {\r\n                e.preventDefault();\r\n                const {author, text, secText} = this.state\r\n                this.props.onHandlerNews({\r\n                    id: +new Date(), // id contains numbers of ms. that have passed since 1 jan 1970\r\n                    author,\r\n                    text,\r\n                    secText\r\n                })\r\n                \r\n            }\r\n            onHandlerChange = (e) => {\r\n                const {id, value} = e.currentTarget;\r\n                this.setState({[id]: value})\r\n            }\r\n            handleCheckbox = (e) => {\r\n               this.setState({agree: e.currentTarget.checked})\r\n            }\r\n            render(){\r\n                const {author, text, secText} = this.state\r\n                return(\r\n                    <form className=\"add\">\r\n                        <input type=\"text\"\r\n                            placeholder=\"Input Author...\"\r\n                            className=\"add_author\"\r\n                            id=\"author\"\r\n                            onChange={this.onHandlerChange}\r\n                            value={author}\r\n                            />\r\n                        <textarea placeholder=\"Input Text...\"\r\n                            id=\"text\"\r\n                            onChange={this.onHandlerChange}\r\n                            value={text}\r\n                            className=\"add_text\">\r\n                        </textarea>\r\n                        <textarea placeholder=\"Advertisement is spam...\"\r\n                            id=\"secText\"\r\n                            className=\"add_sec-text\"\r\n                            onChange={this.onHandlerChange}\r\n                            value={secText}>\r\n                        </textarea>\r\n                        <label className=\"add_chekrule\">\r\n                        <input type=\"checkbox\"\r\n                            onChange={this.handleCheckbox}/>\r\n                            I agree with the rules\r\n                        </label>\r\n                        <button className=\"add_btn\"\r\n                            onClick={this.onButton}\r\n                            disabled={!this.validate()}>\r\n                            Show last news\r\n                        </button>\r\n                    </form>\r\n                )\r\n            }\r\n        }\r\n        export { Add }","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Article extends React.Component{\r\n            state = {\r\n                visible: false\r\n            }\r\n            onClickSecText = (e) => {\r\n                e.preventDefault();\r\n                this.setState({visible: true})\r\n            }\r\n            render(){\r\n                const {author, text, secText} = this.props.data;\r\n                const { visible } = this.state; \r\n                return(\r\n                    <div className=\"article\">\r\n                        <p className=\"news_author\">{author}:</p>\r\n                        <p className=\"news_text\">{text}</p>\r\n                        {\r\n                            !visible && <a onClick={this.onClickSecText}\r\n                                            href=\"#readmore\">\r\n                                            Readmore\r\n                                        </a>\r\n                        }\r\n                        {\r\n                            visible && <p className=\"news_sec-text\">{secText}</p>\r\n                        }\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n        Article.propTypes = {\r\n            data: PropTypes.shape({\r\n                id: PropTypes.number.isRequired,\r\n                author: PropTypes.string.isRequired,\r\n                text: PropTypes.string.isRequired,\r\n                secText: PropTypes.string.isRequired\r\n            })\r\n        }\r\nexport { Article }","import React from 'react';\r\nimport { Article } from './Article.js'\r\nimport PropTypes from 'prop-types';\r\n\r\nclass News extends React.Component{\r\n        renderNews = () => {\r\n                const { data } = this.props\r\n                let newsTemplate = null;               \r\n                \r\n                if(data.length){\r\n                newsTemplate = data.map(function(item){\r\n                    return <Article key={item.id} data={item}/>\r\n                })\r\n                } else {\r\n                    newsTemplate =  <p>Ufortunately is not news</p>\r\n                }\r\n                return newsTemplate;\r\n            }\r\n            render() {\r\n                const {data} = this.props\r\n                return (\r\n                    <div className=\"news\">\r\n                        {this.renderNews()}\r\n                        {\r\n                           data.length ? <strong>\r\n                                    All the news: {data.length}\r\n                                    </strong>: null\r\n                        }\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        News.propTypes = {\r\n            data: PropTypes.array.isRequired\r\n        }\r\nexport { News }","import React from 'react';\nimport { Add } from './components/Add.js'\nimport { News } from './components/News.js'\n\nimport './App.css';\n\n        class App extends React.Component{\n            state ={\n                news: null,\n                isLoading: true\n            }      \n            static getDerivedStateFromProps(props, state) {\n                console.log(props)\n                console.log(state)\n            let nextFilteredNews\n            if(Array.isArray(state.news)) {\n              nextFilteredNews = [...state.news]  \n               \n              nextFilteredNews.forEach((item, index) => {\n                if(item.secText.toLowerCase().indexOf(\"advertisement\") !== -1) {\n                 item.secText = 'SPAM'\n                 }       \n                })\n             return{\n                filteredNews: nextFilteredNews\n              }\n        \n             } \n            return null   \n            }\n            componentDidMount() {\n              fetch('http://localhost:3000/data/newsData.json')\n                .then(response => {\n                    return response.json();\n                })\n                .then(data => {\n                    setTimeout(() => {\n                    this.setState({isLoading: false, news: data})\n                    }, 3000)\n                })\n            }\n            onAddNews = data => {\n                const lastNews = ([data, ...this.state.news])\n                this.setState({news: lastNews})\n            }\n            render(){\n                const { news, isLoading } = this.state\n                return(\n                    <React.Fragment>\n                        <h3>News</h3>\n                        <Add onHandlerNews={this.onAddNews}/>\n                        {isLoading && <p>Downloading...</p>}\n                        {Array.isArray(news) && <News data={news}/>}\n                    </React.Fragment>\n                )\n            }\n        }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}